global_defs {
        notification_email {
                {{ notification_email | join('\n') | indent(16) }}
        }
{% if notification_email_from is defined %}
        notification_email_from {{ notification_email_from }}
{% endif %}
        smtp_server 127.0.0.1
}

{% for v in vrrp %}
vrrp_instance {{ v.instance }} {
        state {{ v.state }}
        interface {{ v.iface }}
        version 2
        virtual_router_id {{ v.vrid }}
        preempt_delay 60
        priority {% if v.priority is defined %} {{ v.priority }} {% elif v.state == 'MASTER' %} 255 {% else %} 100 {% endif %}

        authentication {
                auth_type PASS
                auth_pass huy
        }
        virtual_ipaddress {
{% for i in v.addresses %}
                {{ i.address }}/{{ i.cidr }}
{% endfor %}
        }
        #promote_secondaries
}
{% endfor %}

{% for g in lvs_director_groups2 %}

{% if g.fwmark is not defined %}
virtual_server_group {{ g.name }} {
{% for i in g.virtual_addresses %}
        {{ i.address }} {{ g.port }}
{% endfor %}
}
{% endif %}

{% if g.fwmark is defined %}
virtual_server fwmark {{ g.fwmark }} {
{% else %}
virtual_server group {{ g.name }} {
{% endif %}
        lvs_sched   {{ g.lvs_sched }}
        lvs_method  {{ g.lvs_method }}
        protocol TCP
        delay_loop  {{ g.delay_loop }}
{% if g.persistence_timeout is defined %}
        persistence_timeout {{ g.persistence_timeout }}
{% endif %}
{% for r in g.real_addresses %}
        real_server {{ r }} {% if g.fwmark is not defined %} {{ g.port }} {% endif %} {
{% if   g.node_check == 'ssl_get' %}
                SSL_GET {
                        url {
                                path /
                                status_code 200
                        }
                        connect_port {{ g.port }}
                        connect_timeout {{ g.connect_timeout }}
                        retry {{ g.retry }}
                }
{% elif g.node_check == 'http_get' %}
                HTTP_GET {
                        url {
                                path /
                                status_code 200
                        }
                        connect_port {{ g.port }}
                        connect_timeout {{ g.connect_timeout }}
                        retry {{ g.retry }}
                }
{% elif g.node_check == 'tcp_check' %}
                TCP_CHECK {
                        connect_port {{ g.port }}
                        connect_timeout {{ g.connect_timeout }}
                        retry {{ g.retry }}
                }
{% endif %}
        }
{% endfor %}
}

{% endfor %}
